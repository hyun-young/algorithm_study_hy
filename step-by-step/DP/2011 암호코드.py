"""
bean
25114
(2,5,1,4) + 25,11,14)
1. 2 5 1 1 4
2. 2 5 1 14
3. 2 5 11 4
4. 25 1 1 4
5. 25 1 14
6. 25 11 4

묶였을 때 변환되는 숫자는 10~26

ex 0 2 7 1
dp 1 1 1 1

ex 0      2      5           1            1        4
dp 1 1(변환불가) 2(변환가능)  2(변환불가) 4(변환가능)   6(변환 가능)

ex 0 1 2 2 3 6
dp 1 1 2 3 5 5

0 1 1 1 1 1  1  1  1  1  1
1 1 2 3 5 8 13 21 34 55 89

0 2 0 2 0 1
1 1 1 1 1 1 # 0이 붙으면 2전 앞은 못더함

0 2 0 3 0
1 1 1 1 0(불가능)
변환 가능하면 앞 2개 더하기 불가능하면 앞수 그대로
암호가 잘못되려면 0으로 시작하는 수가 입력되는 경우 외엔 x
"""

nums = ['0']+ list(input().rstrip())
if nums[1] == '0':
    print(0)
    exit(0)
dp = [0] * (len(nums)) # n+1
dp[0]=1
dp[1]=1
for i in range(2, len(nums)):
    if nums[i] != '0':
        dp[i] += dp[i-1] # 0만 아니면 앞 전과 같은 수로 맞춰놓음
    tmp = int(nums[i-1]+nums[i])
    #print(tmp)
    if 10 <= tmp <= 26: # 변환 가능한 경우는 그 전꺼를 더함
        dp[i] += dp[i-2] # 그 앞까지 더함
#print(dp)
print(dp[-1] % 1000000)